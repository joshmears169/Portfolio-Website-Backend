AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Portfolio Backend

  SAM Template for creating the backend of my portfolio website

  '
Globals:
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowMethods: "'OPTION,GET'"
      AllowHeaders: "'*'"    
  Function:
    Timeout: 3
Resources:
#API Gateway
  #ServerlessRestApi:
    #Type: AWS::Serverless::API
    #Properties:
      #Name: Portfolio Backend API Gateway
      #StageName: Prod 
      #Auth:
       # DefaultAuthorizer: AWS_IAM
      #Cors:
        #AllowMethods: "'GET'"
        #AllowHeaders: "'Content-Type'"
        #AllowOrigin: "'*'"
#Lambda Function         
  PortfolioBackendFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: PortfolioBackendFunction.py
      Description: 'Simple backend read/write to DyanmoDB'
      Handler: PortfolioBackendFunction.lambda_handler
      Runtime: python3.8
      #Layers:
       # - !Ref SimplejsonLayer
      MemorySize: 128
      Timeout: 3
      Policies:
        - DynamoDBReadPolicy: 
            TableName: !Ref VisitorCounter
        - DynamoDBWritePolicy:
            TableName: !Ref VisitorCounter
        #- AmazonDynamoDBFullAccess
       # - Version: '2012-10-17'
       #   Statement:
       #     - Effect: Allow
       #       Action:
       #         - 'dynamodb:GetItem'
       #         - 'dynamodb:PutItem'
       #         - 'dynamodb:UpdateItem'
       #       Resource:
       #         'Fn::Join':
       #           - ''
       #           - - 'arn:aws:dynamodb:'
       #             - Ref: 'AWS::Region'
       #             - ':'
       #             - Ref: 'AWS::AccountId'
       #             - ':tables/VisitorsTable'        
      Environment:
        Variables:
          TABLE_NAME: !GetAtt VisitorCounter.Arn
      Events:
        HttpGet:
          Type: Api
          Properties:
            Path: /VisitorCounter
            Method: GET
            #RestApiId: !Ref ServerlessRestApi
#LambdaLayers  
  #SimplejsonLayer:
   # Type: AWS::Serverless::LayerVersion
    #Properties:
     # LayerName: simplejson-dependencies
      #Description: Importing simplejson to deal with decimal value
      #ContentUri: dependencies/
      #CompatibleRuntimes:
      #  - python3.8
      #RetentionPolicy: Retain
#DynamoDB Table
  VisitorCounter:
    Type: AWS::DynamoDB::Table
    Properties:
      #TableName: VisitorCounter
      KeySchema:
        - AttributeName: website
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: website
          AttributeType: S
      ProvisionedThroughput: 
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
Outputs:
  PortfolioBackendApi:
    Description: API Gateway endpoint URL for Prod stage for Portfolio Backend function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  PortfolioBackendFunction:
    Description: Portfolio Backend Lambda Function ARN
    Value: !GetAtt PortfolioBackendFunction.Arn
  PortfolioBackendFunctionIamRole:
    Description: Implicit IAM Role created for Portfolio Backend function
    Value: !GetAtt PortfolioBackendFunctionRole.Arn
  VisitorCounter:
    Description: DynamoDB table to record visitor count to my portfolio
    Value: !GetAtt VisitorCounter.Arn